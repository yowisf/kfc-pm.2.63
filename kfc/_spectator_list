// Made by szir for KFC Mod

substr_safe(str, start, len)
{
    if (!isDefined(str)) return "";
    if (!isDefined(start) || start < 0) start = 0;
    if (!isDefined(len) || len < 0) return "";

    result = "";
    max = str.size;
    end = start + len;
    if (end > max) end = max;

    for (i = start; i < end; i++)
    {
        result = result + str[i];
    }
    return result;
}

spectator_list_init()
{
    level.spectatorUpdateInterval = 0.6;   
    level.spectatorMaxShow       = 6;    
    level.spectatorNameMaxLen    = 14;    

    level thread spectator_list_think();
}

spectator_list_think()
{
    level endon("game_ended");
    level endon("map_restart");
    level endon("level_shutdown");

    for (;;)
    {
        players = getEntArray("player", "classname");

        // Crear HUDs privados por jugador
        for (i = 0; i < players.size; i++)
        {
            pl = players[i];
            if (!isDefined(pl))
                continue;

            if (!isDefined(pl.spectatorListHUD))
            {
                hud = newClientHudElem(pl);
                hud.owner = pl;
                hud.horzAlign = "left";
                hud.vertAlign = "top";
                hud.x = 18;
                hud.y = 130;
                hud.font = "objective";
                hud.fontscale = 1.4;
                hud.color = (1, 1, 1);
                hud.alpha = 1;
                hud.sort = 1;
                pl.spectatorListHUD = hud;
            }
            else
            {
                pl.spectatorListHUD setText("");
            }

            if (!isDefined(pl.spectatorViewerHUD))
            {
                vh = newClientHudElem(pl);
                vh.owner = pl;
                vh.horzAlign = "left";
                vh.vertAlign = "top";
                vh.x = 9;
                vh.y = 8;
                vh.font = "objective";
                vh.fontscale = 1.4;
                vh.color = (1, 1, 1);
                vh.alpha = 1;
                vh.sort = 1;
                pl.spectatorViewerHUD = vh;
            }
            else
            {
                pl.spectatorViewerHUD setText("");
            }
        }

        
        for (i = 0; i < players.size; i++)
        {
            target = players[i];
            if (!isDefined(target))
                continue;

            spectators = [];

            for (j = 0; j < players.size; j++)
            {
                viewer = players[j];
                if (!isDefined(viewer))
                    continue;

                if (!isDefined(viewer.sessionstate) || viewer.sessionstate != "spectator")
                    continue;

                if (!isDefined(viewer.spectatorclient))
                    continue;

                // Solo contar si estÃ¡ mirando a target
                if (viewer.spectatorclient == (target getEntityNumber()))
                {
                    spectators[spectators.size] = viewer;
                }
            }

            
            if (spectators.size > 0)
            {
                maxShow = level.spectatorMaxShow;
                if (maxShow <= 0) maxShow = 6;
                count = spectators.size;
                if (count > maxShow) count = maxShow;

                text = "spectators (" + spectators.size + ")\n";

                for (k = 0; k < count; k++)
                {
                    name = spectators[k].name;
                    if (!isDefined(name)) name = "unknown";

                    if (name.size > level.spectatorNameMaxLen)
                        name = substr_safe(name, 0, level.spectatorNameMaxLen);

                    text = text + name;
                    if (k < count - 1) text = text + "\n";
                }

                
                if (isDefined(target.spectatorListHUD))
                    target.spectatorListHUD setText(text);

                
                obsName = target.name;
                if (!isDefined(obsName)) obsName = "unknown";
                if (obsName.size > level.spectatorNameMaxLen)
                    obsName = substr_safe(obsName, 0, level.spectatorNameMaxLen);

                for (k = 0; k < spectators.size; k++)
                {
                    v = spectators[k];
                    if (isDefined(v.spectatorViewerHUD))
                        v.spectatorViewerHUD setText(obsName);
                }
            }
        }

        wait level.spectatorUpdateInterval;
    }
}
